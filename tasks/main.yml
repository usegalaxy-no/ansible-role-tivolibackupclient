---
# tasks for tivoli backup client
#

- name: create rpm temp dir
  file:
    path: '{{ rpmdir }}'
    state: directory
    mode: '0755'
  tags:
  - tivoliba

- name: copy rpms tivoli backup client
  copy:
    src: '{{ item }}'
    dest: '{{ rpmdir }}'
  with_fileglob:
    - rpms/*.rpm
  tags:
  - tivoliba

- name: Find tivoli RPM files
  find:
    paths: '{{ rpmdir }}'
    patterns: "*.rpm"
  register: rpm_result
  tags:
  - tivoliba

- name: install tivoli rpms
  command: rpm -i --force --nosignature  "{{ item.path }}"
  with_items: "{{ rpm_result.files }}"
  tags:
  - tivoliba

- name: create tivoli logdir
  file:
    path: '{{ tivoli_logdir }}'
    state: directory
    mode: '0755'
  tags:
  - tivoliba

- name: create adsm configdir
  file:
    path: '{{ adsm_cfgdir }}'
    state: directory
    mode: '0755'
  tags:
  - tivoliba

- name: copy tivoli config
  template:
    src: dsm.sys.j2
    dest: '{{ tivoli_cfgdir }}/dsm.sys'
    mode: 0644
    owner: root
    group: root
    force: yes
  notify: restart dsmcad
  tags:
  - tivoliba
  ignore_errors: yes

- name: copy tivoli include exclude files
  template:
    src: '{{ item }}-TEMP.j2'
    dest: '{{ tivoli_cfgdir }}/{{ item }}-{{ ansible_hostname }}'
    mode: 0644
    owner: root
    group: root
    force: yes
  with_items:
    - dsm.inclexcl
    - dsm.opt
  notify: restart dsmcad
  tags:
  - tivoliba

- name: copy tivoli opt  file
  template:
    src: '{{ item }}-TEMP.j2'
    dest: '{{ tivoli_cfgdir }}/{{ item }}'
    mode: 0644
    owner: root
    group: root
    force: yes
  with_items:
    - dsm.opt
  notify: restart dsmcad
  tags:
  - tivoliba


- name: check for /usr/local/bin
  stat:
    path: '/usr/local/bin'
  register: bin_dir

- name: "echo if bin directory already existed"
  when: bin_dir.stat.exists
  debug:
    msg: "/usr/local/bin directory exists"

- name: create /usr/local/bin if not exist
  when: bin_dir.stat.exists == false
  file:
    path: '/usr/local/bin'
    state: directory
    mode: '0755'
  tags:
  - tivoliba


- name: copy tivoli bin scripts
  template:
    src: 'dsmc-TEMP.j2'
    dest: '/usr/local/bin/dsmc-{{ ansible_hostname }}'
    mode: 0755
    owner: root
    group: root
    force: yes
  tags:
  - tivoliba

- name: copy tivoli pass file
  copy:
    src: 'TSM.PWD.{{ ansible_hostname }}'
    dest: '{{ adsm_cfgdir }}/TSM.PWD'
    mode: 0600
    owner: root
    group: root
    force: no
  tags:
  - tivoliba
  ignore_errors: yes

- name: link tivoli cfg files
  file:
    src: '{{ tivoli_cfgdir }}/{{ item }}-{{ ansible_hostname }}'
    dest: '{{ adsm_cfgdir }}/{{ item }}-{{ ansible_hostname }}'
    state: link
  with_items:
    - dsm.inclexcl
    - dsm.opt
  tags:
  - tivoliba
  ignore_errors: yes

- name: copy systemd file
  template:
    src: dsmcad.service.j2
    dest: /etc/systemd/system/dsmcad.service
    mode: 0755
    owner: root
    group: root
  tags:
  - tivoliba

- name: start and enable dsmcad
  service:
    name: dsmcad
    state: started
    enabled: true
    daemon_reload: yes
  tags:
  - tivoliba
